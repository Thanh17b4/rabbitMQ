// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// ActivateService is an autogenerated mock type for the ActivateService type
type ActivateService struct {
	mock.Mock
}

// Activate provides a mock function with given fields: code, email
func (_m *ActivateService) Activate(code int, email string) (string, error) {
	ret := _m.Called(code, email)

	var r0 string
	if rf, ok := ret.Get(0).(func(int, string) string); ok {
		r0 = rf(code, email)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(int, string) error); ok {
		r1 = rf(code, email)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewActivateService interface {
	mock.TestingT
	Cleanup(func())
}

// NewActivateService creates a new instance of ActivateService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewActivateService(t mockConstructorTestingTNewActivateService) *ActivateService {
	mock := &ActivateService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
